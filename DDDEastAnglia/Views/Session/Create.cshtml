@model DDDEastAnglia.Models.Session

@{
    ViewBag.Title = "Create";
}

<h2>Submit a session</h2>

@using (Html.BeginForm())
{
    <div class="alert alert-info">
        Please note that as we are a community conference, our budget goes towards ensuring that people can attend for free.
        Unfortunately, this means we are unable to cover your travel and accomodation expenses incurred in coming to speak with us
        (however we'll happily buy you a drink after the conference).
    </div>

    <div class="well">
        <h3>Session submission guidance</h3>
        <p>
            We are aiming to put together a diverse programme, so we welcome submissions from any member of the UK developer community
            on anything relevant to modern developers. To uphold the
            @Html.ActionLink("principles of DDD events", "About", "Home", null, null, "principles", null, null),
            we will favour new and local speakers over established speakers or speakers from a more remote geographical location.
            To encourage first-time speakers, we have put together a
            @Html.ActionLink("list of resources", "Resources", "Speaker", null, new { @class = "submit-session" })
            to help with session submission.
        </p>

        <h4>About the Audience</h4>
        <p>
            DDD audiences are interested in hearing about what you have learned about the topic that you are speaking on, being introduced to a new topics, ideas, technology,
            or hearing about your experiences with a project you have been working on.
        </p>

        <h4>Sessions</h4>
        <p>
            Our sessions are 60 minutes long and are usually single-speaker talks on a specific subject, although some have featured multiple speakers.
            Technical sessions, particularly those featuring hardware elements (e.g. Raspberry Pi), work well when demos and code samples
            are included. That said, we also welcome sessions that are based around a new format not yet presented at a DDD event.
        </p>
        <p>
            Topics that have previously been covered include unit testing, test-driven development, NoSQL databases, JavaScript, Docker,
            functional C#, software architecture, F#, plus many more. "Softer" topics such as best practices, agile software development,
            and taking your side project to a prime-time business have also been presented. We always welcome session submissions on new topics.
        </p>

        <h4>Review process</h4>
        <p>
            Sessions are voted on by prospective attendees before registration opens. The organisers of DDD events use the results of
            the voting to determine which sessions are most popular and therefore make the best event for our attendees.
        </p>
    </div>


    <p>Please provide the details of your session below.</p>

    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.SpeakerUserName)
    @Html.HiddenFor(model => model.ConferenceId)

    <div class="editor-label">
        @Html.LabelFor(model => model.Title)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Title)
        @Html.ValidationMessageFor(model => model.Title)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Abstract)
    </div>
    <div id="wmd-button-bar"></div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Abstract, 10, 50, new { id = "wmd-input" })
        @Html.ValidationMessageFor(model => model.Abstract)
    </div>
    <div id="wmd-preview"></div>

    <div>
        <input type="submit" class="btn btn-primary" value="Submit session" />
        @Html.ActionLink("Cancel", "Index")
    </div>
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var converter = new Markdown.Converter();
        var editor = new Markdown.Editor(converter);
        editor.run();
    </script>
}
